
MAILGUN:
======


Mailgun e'¨ una piattaforma che permette di inviare, ricevere e controllare email tramite API o 
protocollo SMTP e da in output informazioni in formato JSON.					



Funzionamento:
----

Una volta creata un'utenza su [Mailgun] [1] si ricevera'  una *APIKEY* con la quale si avra'  accesso alle API del sistema.

Il primo step per interagire con la piattaforma consiste nel creare un nuovo dominio con il quale inviare le mail.
I domini all'inizio saranno non verificati, e potranno supportare un invio massimo di trecento mail al giorno.
Tramite le librerie fornite e' possibile inviare mail ad uno o piu' contatti contemporaneamente con l'aggiunta di vari parametri.
Il server permette di memorizzare diversi elementi:
>   
>    *	Dominii
>    *	Mailing Lists
>    *	Logs
>    *	Routes
>    *	Tracking
>    *	Campaigns
>    *	Bounces
>    *	Unscribes
>    *	Complaints

Con una licenza free si avranno i Log e gli events API memorizzati fino ad un massimo di due giorni ed una soglia massima mensile di invio email pari a 10.000, contro lo storage di 30 giorni dei logs e il no-limit email con un Account a pagamento.			                                                           
Nello specifico i Logs svolgono una funzionalita'  basilare in Mailgun in quanto tengono traccia di ogni singolo cambiamento di stato di ciascun messaggio.                                                                    


Elementi analizzati
----

##messaggi     

Come messaggio s'intende una singola mail della quale sara'  restituito uno stato  della chiamata REST ed un ID ( in caso di successo), al momento dell'invio.
Stati della chiamata e relativo significato:
>*	200  =  SUCCESS
>*	400 =  BAD_REQUEST
>*	401 = NOT_AUTHORIZED
>*	402 = REQUEST_FAILED
>*	404 = WRONG_REQUEST
>*	500-502-503-504 =  SERVER_ERROR

Come risultato dell'invio di un messaggio, supponendo che lo stato sia 200, si ottiene un singolo Id sia nel caso dell'invio ad un singolo destinatario sia nel caso di invio ad un insieme di utenti. 

###Sending:
Un messaggio semplice deve contenere obbligatoriamente almeno un campo "from", un campo "to" ed il contenuto della mail. Il contenuto sars'  inserito come parametro "text" o "html".   

I parametri che e' possibile inserire durante l'invio di una mail sono: from, to, cc, bcc, subject, text, 
html, attachment, inline, o:tag, o:campaign, o:dikim, o:deliverytime, o:testmode, o:tracking, o:tracking-clicks, o:tracking-opens, h:X-My-Header, v:my-var. 					    
Da notare che il campo from riconosce l'inserimento del Name From oltre che dell'indirizzo:
    -	"NameFrom  indirizzo@dominio.xxx" 
    -	"NameFrom <indirizzo@dominio.xxx>"
    -	"indirizzo@dominio.xxx"
    
Per l'invio ad un singolo utente si dovra'  inserire il corrispettivo indirizzo email con il parametro "to". Di conseguenza per l'invio del messaggio a piu' utenti (recipients) si potranno inserire piu' istanze del parametro "to" o "cc"; in questo modo ogni recipient vedra'   anche a quali altri indirizzi e' stato mandato il messaggio.
Affinche'  invece ciascun destinatario veda che la mail e' stata mandata specificatamente a lui si potranno fare piu' chiamate API  di singoli messaggi con un solo parametro "to", oppure utilizzare le *Mailing Lists* o le *Recipient Variables* per inviare un solo messaggio a piu' utenti con una singola 
chiamata.

####Mailing Lists

Una Mailing List e'¨ formata un alias della forma "email@yourDomain" che  referenzia un insieme di singoli recipients. E' possibile creare Mailing Lists sia da API che da pannello di controllo su https://mailgun.com/. 

####Recipient Variables

Le Recipient Variables sono delle variabili personalizzate che  permettono di inviare un messaggio ad un insieme formato da piu'  utenti sia di personalizzare il contenuto della mail per ciascuno di loro, sempre con un'unica chiamata alle API.

Sono costruite secondo lo schema di una  mappa di mappe. 

La rappresentazione JSON e' quella riportata in Figura 1.

```s
   {
   "user1@example.com" : {"unique_id": "ABC123456789"},
   "user2@example.com" : {"unique_id": "ZXY987654321"}
   }
```
*Recipient Variables: JSON format*  		      			Figura 1
      
Per accedere ai valori delle variabili bastera'  inserire, nel testo del messaggio o nel subject, la seguente dicitura:  *%recipient.yourkey%* 

Se si vogliono raggruppare piu' messaggi (inviati ad uno o piu' utenti) si possono aggiungere i parametri "o:tag" e "o:campaign" al momento dell'invio, in questo modo sara'  piu' facile recuperarli con una adeguata query sui log.

Il primo parametro, "tag", indica una parola chiave di riferimento non standard,  il secondo invece "campaign" attribuisce il singolo messaggio ad una campagna 
specifica , creata precedentemente su Mailgun e che aiuta a raggruppare logicamente piu' elementi.

Infine per inserire un allegato si dovra'  utilizzare il parametro "inline" con il path di riferimento 
diretto all'oggetto.

##Logs:
I Logs tengono traccia di qualunque nuovo "event" di ciascun messaggio inviato.	 	  
Per "event" s'intende lo stato in cui si trova un certo messaggio, si veda la seguente lista.
>*	Accepted  =  messaggio accettato e messo in coda
>*	Rejected 
>*	Delivered = messaggio inviato
>*	Failed
>*	Opened = messaggio aperto
>*	Clicked = l'utente ha aperto un link della mail
>*	Unsubscribed
>*	Complained
>*	Stored

Svolgendo una ricerca sull'id di un messaggio appena inviato ad un recipient , si otterra'  un  JSON composto inizialmente da un solo elemento "item" riportante lo stato "accepted". Il messaggio a' quindi stato messo in coda di invio.

Appena il server mandera'  la mail,  il JSON conterra'  un altro elemento, con lo stato "delivered", con un totale di due "item". La stessa cosa accade nel caso di mail aperte, link clicked ed i casi rimanenti. 

Di seguito un esempio di log di un messaggio inviato ad un utente:
```sh
Result: {
  "items": [
    {
      "tags": [], 
      "timestamp": 1401187859.762482, 
      "envelope": {
        "targets": "marioRossi@gmail.com", 
        "sender": "amministrazione@yourdomain.com", 
        "transport": ""
      }, 
      "recipient-domain": "gmail.com", 
      "event": "accepted", 
      "campaigns": [], 
      "user-variables": {}, 
      "flags": {
        "is-authenticated": true, 
        "is-system-test": false, 
        "is-test-mode": false
      }, 
      "message": {
        "headers": {
          "to": "%recipient%", 
          "message-id": "20140527105059.5638.43312@ yourdomain.com", 
          "from": "Amministrazione <amministrazione@ yourdomain.com>", 
          "subject": "Invite"
        }, 
        "attachments": [], 
        "recipients": [
          "marioRossi@gmail.com"
        ], 
        "size": 346
      }, 
      "recipient": "marioRossi@gmail.com", 
      "method": "http"
    }, 
    {
      "tags": [], 
      "envelope": {
        "sender": "amministrazione@yourdomain.com", 
        "sending-ip": "184.173.153.213", 
        "targets": "marioRossi@gmail.com", 
        "transport": "smtp"
      }, 
      "delivery-status": {
        "message": "", 
        "code": 0, 
        "description": null, 
        "session-seconds": 0.9146449565887451
      }, 
      "recipient-domain": "gmail.com", 
      "campaigns": [], 
      "user-variables": {}, 
      "flags": {
        "is-authenticated": true, 
        "is-system-test": false, 
        "is-test-mode": false
      }, 
      "timestamp": 1401187860.813292, 
      "message": {
        "headers": {
          "to": "marioRossi@gmail.com", 
          "message-id": "20140527105059.5638.43312@yourdomain.com", 
          "from": " Amministrazione  <amministrazione@ yourdomain.com>", 
          "subject": "Invite"
        }, 
        "attachments": [], 
        "recipients": [
          "marioRossi@gmail.com"
        ], 
        "size": 509
      }, 
      "recipient": "marioRossi@gmail.com", 
      "event": "delivered"
    }
  ], 
  "paging": {
    "next": "https://api.mailgun.net/v2/yurdomain.com/events/W3siYSI6IHR...", 
    "previous": "https://api.mailgun.net/v2/yourdomain.com/events/..."
  }
}
```

La query al server sui log si puo' eseguire su diversi parametri.					    
Tra questi emerge la ricerca per recipient, event, message-id, campaign-name, tag, mailing list ed altri. La query puo' essere eseguita anche su piu' parametri contemporaneamente ed agira'  esclusivamente su tutti i messaggi del dominio specificato. 

##Tracking:
Il tracking permette di ricevere diverse informazioni, nel caso corrente verranno illustrati i casi delle mail aperte  o sui link cliccati.
Nel primo caso si dovra'  inserire ,al momento dell'invio della mail, il parametro "o:tracking-opens" e nel secondo invece "o:tracking-clicks".

Il primo tracking avra'  successo se l'utente autorizzera'  l'applicazione ad aprire anche le immagini contenute nelle email. In questo modo un'immagine trasparente di 1px sara'  scaricata automaticamente dal server di Mailgun che traccera'  l'apertura della mail.

Nel secondo tracking invece si dovra'  prestare attenzione ad inserire il link all'interno dell'apposito tag  html <a>, in questo modo l'utente non avra'  una redirezione diretta al link ma la richiesta fara'  rotta sul server di Mailgun che ne traccera'  l'operazione per poi rilasciare il link originale.

>In entrambi i casi, sia per permettere di inserire l'immagine sia per inserire il tag <a>, sara'  necessario impostare come parametro del contenuto principale  del messaggio il tag "html" invece di "text".

Per inserire un link di cui non si vuole tenere traccia, si puo' semplicemente aggiungere un link senza tag <a>(in modo diretto o tramite Recipient Variables).

Il tracking delle email e' impostato a true di default, questo potrebbe  dare problemi qualora si utilizzi  un dominio non verificato.
In tal caso le mail aperte non saranno indicate ed i link non funzioneranno. Si dovra'  quindi impostare, al momento dell'invio della mail, il parametro "o:tracking" (o nello specifico o:tracking-opens/ o:tracking-clicks) a "false".






[1]:[https://mailgun.com/]
